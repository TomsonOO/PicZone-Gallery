networks:
  default:
    name: dev-net
    external: false

services:
  db:
    container_name: db_postgres_test
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data-test:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  backend:
    container_name: backend_test
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - db
    environment:
      ELASTIC_USERNAME: "${ELASTIC_USERNAME}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      ELASTIC_URL: "${ELASTIC_URL}"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    volumes:
      - ./backend:/var/www

  php-fpm:
    container_name: php-fpm_test
    build:
      context: backend/
      dockerfile: php/Dockerfile
    volumes:
      - ./backend:/var/www:rw
    env_file:
      - .env.test
    environment:
      ELASTIC_URL: "${ELASTIC_URL}"
      ELASTIC_USERNAME: "${ELASTIC_USERNAME}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      XDEBUG_CLIENT_HOST: "${XDEBUG_CLIENT_HOST}"
      XDEBUG_CLIENT_PORT: "${XDEBUG_CLIENT_PORT}"
      XDEBUG_CONFIG: "${XDEBUG_CONFIG}"
      PHP_IDE_CONFIG: "${PHP_IDE_CONFIG}"

  backend-nginx:
    container_name: backend-nginx_test
    build: ./backend/nginx
    ports:
      - "8082:80"
    volumes:
      - ./backend:/var/www:ro
    depends_on:
      - php-fpm

  frontend:
    container_name: frontend_test
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - './frontend:/app'
      - 'node_modules:/app/node_modules'
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BACKEND_URL=http://localhost:8082

  frontend-nginx:
    container_name: frontend-nginx_test
    build:
      context:  frontend/
      dockerfile: nginx/Dockerfile
    ports:
      - "8083:80"
    depends_on:
      - frontend
      - backend

  es01:
    container_name: es01_test
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
      - esdata01-test:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    environment:
      - CLUSTER_NAME=docker-cluster
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - LICENSE=${LICENSE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

volumes:
  postgres-data-test:
  node_modules:
  esdata01-test:
    driver: local
  certs:
    driver: local
