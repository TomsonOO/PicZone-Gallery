security:
  password_hashers:
    # Our user class and the algorithm we'll use to encode passwords
    # 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  providers:
    database_users:
      entity:
        class: App\User\Domain\Entity\User
        property: username

  enable_authenticator_manager: true

  firewalls:
    login:
      pattern: ^/api/login
      stateless: true
      custom_authenticator: App\User\Infrastructure\Auth\UserAuthenticatorAdapter

    #      json_login:
#        check_path: /api/login
#        username_path: username
#        password_path: password
#        success_handler: lexik_jwt_authentication.handler.authentication_success
#        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api:
      pattern: ^/api
      stateless: true
      jwt: ~

    main:
      # this firewall does not have a 'pattern' option because it applies to all URLs
      lazy: true
      provider: database_users

  access_control:
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api,       roles: PUBLIC_ACCESS }