user:
  post:
    summary: "Create a new user"
    description: "Registers a new user with username, email, and password."
    operationId: "createUser"
    tags:
      - "User"
    security:
      - bearerAuth: []
    requestBody:
      description: "User data"
      required: true
      content:
        application/json:
          schema:
            required: ["username", "email", "password"]
            type: "object"
            properties:
              username:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
    responses:
      '201':
        description: "User created successfully"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                userId:
                  type: "integer"
      '400':
        description: "Invalid input data"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                errors:
                  type: "array"
                  items:
                    type: "string"

userById:
  delete:
    summary: "Delete a user"
    description: "Deletes a single user based on the user ID."
    operationId: "deleteUser"
    tags:
      - "User"
    security:
      - bearerAuth: []
    parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
    responses:
      '200':
        description: "User successfully deleted"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
      '400':
        description: "User not found"
      '401':
        description: "Unauthorized"

userUpdate:
  patch:
    summary: "Update user profile"
    description: "Updates user profile details such as username, email, biography and profile visibility."
    operationId: "updateUser"
    tags:
      - "User"
    security:
      - bearerAuth: []
    requestBody:
      description: "Profile update data"
      required: true
      content:
        multipart/form-data:
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              email:
                type: "string"
              biography:
                type: "string"
              isProfilePublic:
                type: "boolean"
    responses:
      '200':
        description: "Profile updated successfully"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                data:
                  type: "string"
      '400':
        description: "Validation failed"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                errors:
                  type: "string"
      '401':
        description: "Unauthorized"

userUpdateAvatar:
  post:
    summary: "Update user's avatar"
    description: "Allows a user to update their profile avatar image."
    operationId: "updateUserAvatar"
    tags:
      - "User"
    security:
      - bearerAuth: []
    requestBody:
      description: "Avatar image data"
      required: true
      content:
        multipart/form-data:
          schema:
            type: "object"
            properties:
              image:
                type: "string"
                format: "binary"
                description: "The new avatar image file."
    responses:
      '200':
        description: "Avatar updated successfully"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
                imageId:
                  type: "integer"
      '400':
        description: "Invalid input data or file upload failed"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                message:
                  type: "string"
      '401':
        description: "Unauthorized"