networks:
  default:
    name: dev-net
    external: false

services:
  db:
    container_name: db_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  backend:
    container_name: backend
    build:
      context: backend/
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - db
    environment:
      ELASTIC_USERNAME: "${ELASTIC_USERNAME}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      ELASTICSEARCH_URL: "https://elastic:${ELASTIC_PASSWORD}@es01:9200"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    volumes:
      - ./backend:/var/www
      - ./certs/ca/ca.crt:/etc/ssl/certs/ca.crt

  php-fpm:
    container_name: php-fpm
    build:
      context: backend/
      dockerfile: php/Dockerfile
    volumes:
      - ./backend:/var/www:rw
      - ./certs/ca/ca.crt:/etc/ssl/certs/ca.crt
    environment:
      ELASTIC_USERNAME: "${ELASTIC_USERNAME}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      XDEBUG_CLIENT_HOST: "${XDEBUG_CLIENT_HOST}"
      XDEBUG_CLIENT_PORT: "${XDEBUG_CLIENT_PORT}"
      XDEBUG_CONFIG: "${XDEBUG_CONFIG}"
      PHP_IDE_CONFIG: "${PHP_IDE_CONFIG}"

  backend-nginx:
    container_name: backend-nginx
    build: ./backend/nginx
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www:ro
    depends_on:
      - php-fpm

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
     - './frontend:/app'
     - 'node_modules:/app/node_modules'
    ports:
      - "3000:3000"
    environment:
      HOST: "0.0.0.0"
      CHOKIDAR_USEPOLLING: "true"


  frontend-nginx:
    container_name: frontend-nginx
    build:
      context:  frontend/
      dockerfile: nginx/Dockerfile
    ports:
      - "8081:80"
    depends_on:
      - frontend
      - backend

volumes:
  postgres-data:
  node_modules:
  certs:
    driver: local